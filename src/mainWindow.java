import javax.swing.*;
import java.awt.*;
import java.awt.ActiveEvent;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class mainWindow {
    private Player player = new Player();
    private JPanel panel1;
    private JTextField input;
    private JButton resetButton;
    private JButton nextButton;
    private JLabel num1;
    private JLabel symbol;
    private JLabel num2;
    private JButton button1;
    private JLabel result;
    private JLabel correct;
    private JLabel wrong;
    private JLabel skip;
    private boolean okClicked = false;

    public mainWindow() {
        prepareGUI();
        button1.addActionListener(okClick);
        nextButton.addActionListener(nextClick);
        resetButton.addActionListener(resetClick);
    }

    private void prepareGUI() {
        Font f = new Font(Font.DIALOG, Font.BOLD, 15);
        result.setText("");
        symbol.setFont(f);
        num1.setFont(f);
        num2.setFont(f);
        skip.setText("0");
        correct.setText("0");
        wrong.setText("0");
        JFrame frame = new JFrame();
        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.pack();
        frame.setSize(350, 200);
        frame.setResizable(false);
        frame.setVisible(true);
    }

    public static void main(String[] args) {
        mainWindow instance = new mainWindow();
        instance.play();
    }

    private void play() {
        okClicked = false;
        result.setText("");
        input.setText("");
        input.setEditable(true);
        player.generate();
        num1.setText(String.valueOf(player.getGenerator().getFirstNum()));
        num2.setText(String.valueOf(player.getGenerator().getSecondNum()));
        switch (player.getGenerator().getSymbol()) {
            case 0: {
                symbol.setText("+");
                break;
            }
            case 1: {
                symbol.setText("-");
                break;
            }
            case 2: {
                symbol.setText("*");
                break;
            }
            case 3: {
                symbol.setText("/");
                break;
            }
        }
    }

    private ActionListener resetClick = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent actionEvent) {
            player.setSkipQ(0);
            player.setFalseQ(0);
            player.setTrueQ(0);
            skip.setText("0");
            correct.setText("0");
            wrong.setText("0");
        }
    };

    private ActionListener nextClick = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent actionEvent) {
            if (!okClicked) {
                player.setSkipQ(player.getSkipQ() + 1);
                skip.setText(String.valueOf(player.getSkipQ()));
            }
            play();
        }
    };
    private ActionListener okClick = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent actionEvent) {
            if (validateInput()) {
                input.setEditable(false);
                if (Integer.parseInt(input.getText()) == Math.round(player.getGenerator().getResult())) {
                    player.setTrueQ(player.getTrueQ() + 1);
                    result.setForeground(Color.GREEN);
                    result.setText("Correct !");
                    correct.setText(String.valueOf(player.getTrueQ()));
                } else {
                    player.setFalseQ(player.getFalseQ() + 1);
                    result.setForeground(Color.RED);
                    result.setText("False !");
                    wrong.setText(String.valueOf(player.getFalseQ()));
                }
                okClicked = true;
            } else {
                result.setText("Invalid Input, Try again");
                input.setText("");
            }
        }
    };

    private boolean validateInput() {
        String text = input.getText();
        if (text.isEmpty()) return false;
        String stringPattern = "\\-*\\d+"; //number only
        Pattern pattern = Pattern.compile(stringPattern);
        Matcher m = pattern.matcher(text);
        if (m.matches()) return true;
        return false;
    }

    ;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 9;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label3, gbc);
        input = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 10;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(input, gbc);
        num2 = new JLabel();
        num2.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(num2, gbc);
        num1 = new JLabel();
        num1.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(num1, gbc);
        symbol = new JLabel();
        symbol.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(symbol, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Status");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("=");
        gbc = new GridBagConstraints();
        gbc.gridx = 7;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label5, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 8;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer3, gbc);
        result = new JLabel();
        result.setText("asd");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.gridwidth = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(result, gbc);
        button1 = new JButton();
        button1.setText("OK");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(button1, gbc);
        resetButton = new JButton();
        resetButton.setText("Reset");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(resetButton, gbc);
        nextButton = new JButton();
        nextButton.setText("Next");
        gbc = new GridBagConstraints();
        gbc.gridx = 10;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(nextButton, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Statistic");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Correct : ");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label7, gbc);
        correct = new JLabel();
        correct.setText("asv");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.gridwidth = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(correct, gbc);
        final JLabel label8 = new JLabel();
        label8.setText("False :");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label8, gbc);
        wrong = new JLabel();
        wrong.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 6;
        gbc.gridwidth = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(wrong, gbc);
        final JLabel label9 = new JLabel();
        label9.setText("Skip :");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label9, gbc);
        skip = new JLabel();
        skip.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(skip, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
